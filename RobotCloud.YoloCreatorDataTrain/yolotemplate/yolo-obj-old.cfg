[net]
batch=64
# 1 iterator 64 anh, het so anh thi la 1 epoc
subdivisions=64 #if out of memory -> 32 || 64
height=416
width=416
channels=3 
# dong 22 filter
momentum=0.9
# moment la phuong phap toi uu, dua vao dao ham gan day nhat
decay=0.0005
#decay toi thieu do phuc tap cua ham
angle=0
saturation = 1.5
exposure = 1.5
hue=.1

learning_rate=0.0001 
# neu be qua thi cap nhat trong so bi cham
max_batches = 6000 # class*2000 | min 6000
policy=steps
steps=3800,4500 # 80%*  max_batches, 90%* max_batches
# 1 vong 3800 thi giam *0.1
scales=.1,.1
# co the pai bo so 10

[convolutional]
batch_normalize=1
filters=32 
# dung 32 bo loc, 3*3*3 
size=3 
# block dich chuyen size * size * channel 
stride=1 
# step cho block dich chuyen
pad=1
# pad la them boundary
activation=leaky 
#activation la dau vao se can khac dau ra (leaky)
#linar la ko thay doi
# co 32 bo loc

#out put 614*416 *32 (filter)

[maxpool]
size=2 
# pooling 
stride=2

#208*208 * 32 (416/2* 416/2 filter)

[convolutional]
batch_normalize=1
filters=64
size=3
stride=1
pad=1
activation=leaky
# linear: 

#208*208*64

[maxpool]
size=2
stride=2

#104*104*64

[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=64
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=128
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=256
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=3
stride=1
pad=1
activation=leaky

[maxpool]
size=2
stride=2

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=512
size=1
stride=1
pad=1
activation=leaky

[convolutional]
batch_normalize=1
filters=1024
size=3
stride=1
pad=1
activation=leaky


#######

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[route]
layers=-9

[reorg]
stride=2

[route]
layers=-1,-3

[convolutional]
batch_normalize=1
size=3
stride=1
pad=1
filters=1024
activation=leaky

[convolutional]
size=1
stride=1
pad=1
filters=40 # (classes + coords +1)*num
activation=linear

[region]
anchors = 1.08,1.19,  3.42,4.41,  6.63,11.38,  9.42,5.11,  16.62,10.52
bias_match=1
classes=3 # classes numger in obj.names
coords=4
num=5 
# ???
softmax=1
jitter=.2
rescore=1

object_scale=5
noobject_scale=1
class_scale=1
coord_scale=1

absolute=1
thresh = .6
random=0
